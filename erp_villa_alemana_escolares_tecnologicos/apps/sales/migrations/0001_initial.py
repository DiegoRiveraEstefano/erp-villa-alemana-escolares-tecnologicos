# Generated by Django 5.2 on 2025-05-21 23:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0001_initial'),
        ('products', '0001_initial'),
        ('stores', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.DecimalField(decimal_places=2, help_text='The price of the product.', max_digits=10, verbose_name='Price')),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('CARD', 'Card'), ('TRANSFER', 'Transfer')], default='CASH', help_text='The payment method used for the sale.', max_length=32, verbose_name='Payment Method')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('CANCELED', 'Canceled'), ('REFUNDED', 'Refunded')], default='PENDING', help_text='The status of the sale.', max_length=32, verbose_name='Sale Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the sale was created.', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time when the sale was last updated.', verbose_name='Updated At')),
                ('customer', models.ForeignKey(help_text='The customer making the purchase.', on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='customers.customer', verbose_name='Customer')),
                ('store', models.ForeignKey(help_text='The store where the sale was made.', on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='stores.store', verbose_name='Store')),
            ],
            options={
                'verbose_name': 'Sale',
                'verbose_name_plural': 'Sales',
                'ordering': ['-created_at'],
                'permissions': [('can_view_sale', 'Can view sale'), ('can_edit_sale', 'Can edit sale'), ('can_delete_sale', 'Can delete sale')],
            },
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(help_text='The quantity of the product sold.', verbose_name='Quantity')),
                ('product', models.ForeignKey(help_text='The product being sold.', on_delete=django.db.models.deletion.CASCADE, related_name='sale_items', to='products.product', verbose_name='Product')),
                ('sale', models.ForeignKey(help_text='The sale to which this item belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='sales.sale', verbose_name='Sale')),
            ],
            options={
                'verbose_name': 'Sale Item',
                'verbose_name_plural': 'Sale Items',
                'ordering': ['sale', 'product'],
                'permissions': [('can_view_sale_item', 'Can view sale item'), ('can_edit_sale_item', 'Can edit sale item'), ('can_delete_sale_item', 'Can delete sale item')],
            },
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['customer'], name='idx_sale_customer'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['created_at'], name='idx_sale_created_at'),
        ),
        migrations.AddConstraint(
            model_name='sale',
            constraint=models.UniqueConstraint(fields=('customer', 'created_at'), name='unique_sale_customer_created_at'),
        ),
        migrations.AddIndex(
            model_name='saleitem',
            index=models.Index(fields=['sale'], name='idx_sale_item_sale'),
        ),
        migrations.AddIndex(
            model_name='saleitem',
            index=models.Index(fields=['product'], name='idx_sale_item_product'),
        ),
        migrations.AddConstraint(
            model_name='saleitem',
            constraint=models.UniqueConstraint(fields=('sale', 'product'), name='unique_sale_item_sale_product'),
        ),
    ]
