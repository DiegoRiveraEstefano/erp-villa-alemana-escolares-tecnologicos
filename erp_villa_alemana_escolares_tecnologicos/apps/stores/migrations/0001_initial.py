# Generated by Django 5.2 on 2025-05-22 02:59

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('addresses', '0001_initial'),
        ('employees', '0001_initial'),
        ('warehouses', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the store.', max_length=255, unique=True, verbose_name='Store Name')),
                ('slug', models.SlugField(help_text='A short label for URL configuration.', max_length=255, unique=True, verbose_name='Store Slug')),
                ('description', models.TextField(blank=True, default='', help_text='A brief description of the store.', verbose_name='Store Description')),
                ('type', models.CharField(choices=[('physical', 'Physical Store'), ('online', 'Online Store'), ('both', 'Both Physical and Online Store')], default='physical', help_text='The type of the store.', max_length=16, verbose_name='Store Type')),
                ('address', models.ForeignKey(help_text='The address of the store.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stores', to='addresses.address', verbose_name='Store Address')),
                ('warehouse', models.ForeignKey(help_text='The warehouse associated with the store.', on_delete=django.db.models.deletion.CASCADE, related_name='stores', to='warehouses.warehouse', verbose_name='Warehouse')),
            ],
            options={
                'verbose_name': 'Store',
                'verbose_name_plural': 'Stores',
                'ordering': ['name'],
                'permissions': [('can_view_store', 'Can view store'), ('can_edit_store', 'Can edit store'), ('can_delete_store', 'Can delete store')],
            },
        ),
        migrations.CreateModel(
            name='StoreEmployee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_date', models.DateField(auto_now_add=True, help_text='The date the employee was assigned to this store.', verbose_name='Assigned Date')),
                ('employee', models.ForeignKey(help_text='The employee assigned to this store.', on_delete=django.db.models.deletion.CASCADE, related_name='store_employees', to='employees.employee', verbose_name='Employee')),
                ('store', models.ForeignKey(help_text='The store where the employee works.', on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='stores.store', verbose_name='Store')),
            ],
            options={
                'verbose_name': 'Store Employee',
                'verbose_name_plural': 'Store Employees',
                'ordering': ['store__name', 'employee__last_name', 'employee__first_name'],
                'permissions': [('can_view_store_employee', 'Can view store employee'), ('can_edit_store_employee', 'Can edit store employee'), ('can_delete_store_employee', 'Can delete store employee')],
            },
        ),
        migrations.AddIndex(
            model_name='store',
            index=models.Index(fields=['name'], name='idx_store_name'),
        ),
        migrations.AddIndex(
            model_name='store',
            index=models.Index(fields=['slug'], name='idx_store_slug'),
        ),
        migrations.AddConstraint(
            model_name='store',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_store_name'),
        ),
        migrations.AddConstraint(
            model_name='store',
            constraint=models.UniqueConstraint(fields=('slug',), name='unique_store_slug'),
        ),
        migrations.AddIndex(
            model_name='storeemployee',
            index=models.Index(fields=['store'], name='idx_store_store'),
        ),
        migrations.AddIndex(
            model_name='storeemployee',
            index=models.Index(fields=['employee'], name='idx_store_employee'),
        ),
        migrations.AddConstraint(
            model_name='storeemployee',
            constraint=models.UniqueConstraint(fields=('store', 'employee'), name='unique_store_employee_combination'),
        ),
    ]
