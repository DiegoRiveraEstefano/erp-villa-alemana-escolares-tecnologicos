# Generated by Django 5.2 on 2025-05-21 23:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('addresses', '0001_initial'),
        ('employees', '0001_initial'),
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the warehouse.', max_length=255, unique=True, verbose_name='Warehouse Name')),
                ('slug', models.SlugField(help_text='A short label for URL configuration.', max_length=255, unique=True, verbose_name='Warehouse Slug')),
                ('description', models.TextField(blank=True, default='', help_text='A brief description of the warehouse.', verbose_name='Warehouse Description')),
                ('type', models.CharField(choices=[('main', 'Main Warehouse'), ('secondary', 'Secondary Warehouse'), ('third_party', 'Third Party Warehouse'), ('virtual', 'Virtual Warehouse'), ('external', 'External Warehouse')], default='main', help_text='The type of the warehouse.', max_length=16, verbose_name='Warehouse Type')),
                ('address', models.ForeignKey(help_text='The address of the warehouse.', on_delete=django.db.models.deletion.CASCADE, related_name='warehouses', to='addresses.address', verbose_name='Warehouse Address')),
            ],
            options={
                'verbose_name': 'Warehouse',
                'verbose_name_plural': 'Warehouses',
                'ordering': ['name'],
                'permissions': [('can_view_warehouse', 'Can view warehouse'), ('can_edit_warehouse', 'Can edit warehouse'), ('can_delete_warehouse', 'Can delete warehouse')],
            },
        ),
        migrations.CreateModel(
            name='WarehouseEmployee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_date', models.DateField(auto_now_add=True, help_text='The date the employee was assigned to this warehouse.', verbose_name='Assigned Date')),
                ('employee', models.ForeignKey(help_text='The employee assigned to this warehouse.', on_delete=django.db.models.deletion.CASCADE, related_name='warehouse_employees', to='employees.employee', verbose_name='Employee')),
                ('warehouse', models.ForeignKey(help_text='The warehouse where the employee works.', on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='warehouses.warehouse', verbose_name='Warehouse')),
            ],
            options={
                'verbose_name': 'Warehouse Employee',
                'verbose_name_plural': 'Warehouse Employees',
                'ordering': ['employee__last_name', 'employee__first_name'],
                'permissions': [('can_view_warehouse_employee', 'Can view warehouse employee'), ('can_edit_warehouse_employee', 'Can edit warehouse employee'), ('can_delete_warehouse_employee', 'Can delete warehouse employee')],
            },
        ),
        migrations.CreateModel(
            name='WarehouseInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0, help_text='The quantity of the product in the warehouse.', verbose_name='Quantity')),
                ('product', models.ForeignKey(help_text='The product associated with this inventory item.', on_delete=django.db.models.deletion.CASCADE, related_name='inventories', to='products.product', verbose_name='Product')),
                ('warehouse', models.ForeignKey(help_text='The warehouse where the product is stored.', on_delete=django.db.models.deletion.CASCADE, related_name='inventories', to='warehouses.warehouse', verbose_name='Warehouse')),
            ],
            options={
                'verbose_name': 'Warehouse Inventory',
                'verbose_name_plural': 'Warehouse Inventories',
                'ordering': ['product__name', 'warehouse__name'],
                'permissions': [('can_view_warehouse_inventory', 'Can view warehouse inventory'), ('can_edit_warehouse_inventory', 'Can edit warehouse inventory'), ('can_delete_warehouse_inventory', 'Can delete warehouse inventory')],
            },
        ),
        migrations.AddIndex(
            model_name='warehouse',
            index=models.Index(fields=['name'], name='idx_warehouse_name'),
        ),
        migrations.AddIndex(
            model_name='warehouse',
            index=models.Index(fields=['slug'], name='idx_warehouse_slug'),
        ),
        migrations.AddConstraint(
            model_name='warehouse',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_warehouse_name'),
        ),
        migrations.AddConstraint(
            model_name='warehouse',
            constraint=models.UniqueConstraint(fields=('slug',), name='unique_warehouse_slug'),
        ),
        migrations.AddIndex(
            model_name='warehouseemployee',
            index=models.Index(fields=['employee'], name='idx_warehouse_employee'),
        ),
        migrations.AddConstraint(
            model_name='warehouseemployee',
            constraint=models.UniqueConstraint(fields=('employee', 'warehouse'), name='unique_employee_warehouse_combination'),
        ),
        migrations.AddIndex(
            model_name='warehouseinventory',
            index=models.Index(fields=['product'], name='idx_warehouse_product'),
        ),
        migrations.AddConstraint(
            model_name='warehouseinventory',
            constraint=models.UniqueConstraint(fields=('product', 'warehouse'), name='unique_product_warehouse_combination'),
        ),
    ]
